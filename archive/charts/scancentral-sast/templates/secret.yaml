{{- if not $.Values.secrets.secretName }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "scancentral-sast-secret.fullname" . }}
  labels:
    component: secret
    {{- include "scancentral-sast.labels" $ | nindent 4 }}
type: Opaque
data:
  fortify.license: {{ required "secrets.fortifyLicense value is required. (Tip) Use \"helm install/upgrade\" argument --set-file=secrets.fortifyLicense=<FORTIFY_LICENSE_PATH> ." .Values.secrets.fortifyLicense | b64enc | quote }}
  {{- if .Values.controller.enabled }}
  scancentral-worker-auth-token: {{ include "secrets.passwords.manage" (dict "secret" (include "scancentral-sast-secret.fullname" $) "key" "scancentral-worker-auth-token" "providedPassword" .Values.secrets.workerAuthToken "length" 48 "context" $ ) }}
  scancentral-client-auth-token: {{ include "secrets.passwords.manage" (dict "secret" (include "scancentral-sast-secret.fullname" $) "key" "scancentral-client-auth-token" "providedPassword" .Values.secrets.clientAuthToken "length" 48 "context" $ ) }}
  scancentral-ssc-scancentral-ctrl-secret: {{ include "secrets.passwords.manage" (dict "secret" (include "scancentral-sast-secret.fullname" $) "key" "scancentral-ssc-scancentral-ctrl-secret" "providedPassword" .Values.secrets.sscScanCentralCtrlSecret "length" 48 "context" $ ) }}
  {{- else }}
  scancentral-worker-auth-token: {{ required "Missing value at secrets.workerAuthToken" $.Values.secrets.workerAuthToken | b64enc | quote }}
  scancentral-client-auth-token: {{ required "Missing value at secrets.clientAuthToken" $.Values.secrets.clientAuthToken | b64enc | quote }}
  {{- end }}
  {{- range $k, $v := .Values.workers }}
  {{- if and $v.enabled $v.autoUpdate.proxy.password }}
  {{ printf "scancentral-auto-update-proxy-password-%s" $k }}: {{ $v.autoUpdate.proxy.password | b64enc | quote }}
  {{- end }}
  {{- if and $v.enabled $v.controllerProxyPassword }}
  {{ printf "scancentral-worker-ctrl-proxy-password-%s" $k }}: {{ $v.controllerProxyPassword | b64enc | quote }}
  {{- end }}
  {{- if and $v.enabled $v.sscProxyPassword }}
  {{ printf "scancentral-worker-ssc-proxy-password-%s" $k }}: {{ $v.sscProxyPassword | b64enc | quote }}
  {{- end }}
  {{- end }}
{{- end }}